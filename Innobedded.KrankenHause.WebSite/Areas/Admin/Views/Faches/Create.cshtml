@model Innobedded.KrankenHause.Data.Entities.Fach

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Hier ist Create Page </h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control md-input-wrapper" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Create" class="btn btn-success" onclick="tabrik()" />
        </div>
    </div>
</div>
}
<div>
    <br />
    <hr />
</div>


<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">


    function tabrik() {
        alert("JSDD");
    
    $(document).ready(function () {
             $.ajax({
            type: "POST",
            url: "@Url.Action("Create","faches")",
            data: { FachID: "@Model.FachID", Title: "@Model.Title" },
            dataType: "text",
            success: function (msg) {
                console.log(msg);
            },
            error: function (req, status, error) {
                console.log(msg);
            }
        });
    });
    }
</script>
